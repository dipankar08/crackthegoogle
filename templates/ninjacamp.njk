{% extends "layout.njk" %}
{% block head %}
{% endblock %}

{% block nav %}
    <li><a href="#faq"  class="track" >FAQ</a></li>
    <li><a class="btn btn1 primary hgap_m ninja_camp3">Enroll Now</a></li>
{% endblock %}

{% block home %}
<div class="gridBlock textCenter gap_xxl invertColor">
    <div class="oneByOne">
        <p class="sectionSubHeading noMargin">Join Auguest Sessions - Enroll now. </p>
        <p class="heroText noMargin">NINJA CAMP INDIA</p>
        <p class="gap_l">
            <span class="btn secondary"><span style="text-decoration: line-through">July sessions</span> FULL.</span>
            <span class="btn primary hgap_m ninja_camp3">Join Auguest Sessions - Enroll now.</span>
            <a class="btn hgap_m secondary">Know More</a></p>  
    </div>
</div>
<div class="hero gridBlock gap_xxl textCenter invertColor">
    <div class="oneByThree">
        <img src="https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/laravel_and_vue_59tp.svg">
        <p class="itemHeading textCenter ">100 problem-solving techniques</p>
        <p class="paragraph ">No need to solve hundreds of questions online - We have carefully picked 100 techniques to know.</p>
    </div>
    <div class="oneByThree">
        <img src="https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/done_checking_ty9a.svg">
        <p class="itemHeading textCenter">Focus on algorithms & problem solving</p>
        <p class="paragraph">We cover all major topics in algorithms or system design questions with the followup question with compelxity analysis.</p>
    </div>
    <div class="oneByThree">
        <img src="https://42f2671d685f51e10fc6-b9fcecea3e50b3b59bdc28dead054ebc.ssl.cf5.rackcdn.com/illustrations/modern_professional_yt9h.svg">
        <p class="itemHeading textCenter ">World class instructor </p>
        <p class="paragraph ">Software Engineer from Facebook or Google with 100+ real interview experience.</p>
    </div>
</div>
{% endblock %}
{% block content %}
<div class="container">
    <div class="gridBlock textCenter gap_xxl hide">
        <div class="oneByOne">
            <p class="sectionSubHeading noMargin">Course Schedule</p>
            <p class="sectionHeading noMargin">15 Weeks Course Schedule</p>
        </div>
    </div>
    <div class="gridBlock textCenter gap_xl hide">
        <div class="oneByOne">
            <table>
                <tr>
                    <td>Week No.</td>
                    <td>Focus Areas.</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #1</td>
                    <td>Quick Start: Computer scinece recap.</td>
                    <td>We will quickly start the training. We will revisit the basic concept of computer science like Data-Structure, Algorithms, Sorting-Searching and complexity analysis. We will also talk about standard language support for the implementation of these algorithms.</td>
                </tr>
                <tr>
                    <td>Week #2</td>
                    <td>Handling Array Problem</td>
                    <td>Arrays are the fundamental of computer science. You definitely expect an array problem in the technical interview ( in fact in Google and Facebook interview). However, the array problem can be super complex. I will teach you the tricks to handle problem-related to the array.</td>
                </tr>
                <tr>
                    <td>Week #3</td>
                    <td>Problem Solving with Strings</td>
                    <td>Strings problems generally solved by reading the character one by one. But "finding the smallest substring in a string without duplicate" might need some extra thoughts to derive the solutions. We will discuss some mind-blowing problem related to string in this session.</td>
                </tr>
                <tr>
                    <td>Week #4</td>
                    <td>Problem Solving using Matrix With Recurssion</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #5</td>
                    <td>Problem Solving using LinkedList with Dynamic Memory Allocation</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #6</td>
                    <td>Problem Solving using Stack</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #7</td>
                    <td>Problem Solving using Queue</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #8</td>
                    <td>Problem Solving using Priotity Queue and Heap</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #9</td>
                    <td>Problem Solving using Trees and Graphs</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #10</td>
                    <td>Identify Binary Search Problem</td>
                    <td>There are so many problems which can be solved using Binary search - but just seeing the problem, you are not able to realize that. How to get an indication that a binary search might be useful.</td>
                </tr>
                <tr>
                    <td>Week #11</td>
                    <td>Handing Sorting Problems</td>
                    <td>People know about bubble sort and selecting sort, However, QuickSort or Merge sort is super useful while solving other sorting problem. We will explore the possibility to use "merge technical" or "selecting techniques" while solving other problems.</td>
                </tr>
                <tr>
                    <td>Week #12.</td>
                    <td>Problem solving with Divide and Conquer.</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #13</td>
                    <td>Problem solving with Greedy Approach.</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #14</td>
                    <td>Problem solving with Dynamic programming</td>
                    <td>ProgramDeatils </td>
                </tr>
                <tr>
                    <td>Week #15</td>
                    <td> Test Interview and feedback (3 hours)</td>
                    <td>ProgramDeatils </td>
                </tr>
            </table>
        </div>
    </div>
</div>
<!-- problem List -->
<div class="container">
    <a name="list"></a>
    <div class="gridBlock textCenter gap_xxl">
        <div class="oneByOne">
                <p class="sectionSubHeading noMargin">100 Techniques that's all you need.</p>
                <p class="sectionHeading noMargin">What you are expected to learn?</p>
                <p class="paragraph">Here is the complete list which we would like to cover - but we mostly focus on the techniques rather solving an individual problem. 99% of the problems asked in the interview should be solved by these techniques.</p>
        </div>
    </div>
    <div class="gridBlock gap_xl">
    <ul class="threeColumn spaced tick">
        <li class="head">Problem solving using arrays</li>
        <li class="">Tricks for finding odd out</li>
        <li class="">Array sum problems</li>
        <li class="">Sub-array sum problems</li>
        <li class="">Problems on voting algorithms</li>
        <li class="">Scanning techniques: One, Two and parallel scanning </li>
        <li class="head">Problem solving using string</li>
        <li class="">Scan with state machines</li>
        <li class="">Extracting numbers</li>
        <li class="">Palindrome problems</li>
        <li class="">Reversing </li>
        <li class="">Sliding windows techniques </li>
        <li class="">Encoding-decoding </li>
        <li class="">Enumeration with DFS</li>
        <li class="">Wild cards matching</li>
        <li class="head">Problem solving using matrix</li>
        <li class="">Handing special printing </li>
        <li class="">Matrix path problems</li>
        <li class="">Flood fill algorithms </li>
        <li class="">Concurrent Modifying matrix </li>
        <li class="">Matrix search and selection </li>
        <li class="">Handling DFS in the matrix</li>
        <li class="">Optimal sub-matrix </li>
        <li class="head">Problem solving using stack </li>
        <li class="">Augmented stacks</li>
        <li class="">Expression Evolution using stacks</li>
        <li class="">Stack-based Parsing</li>
        <li class="">Histogram problems</li>
        <li class="">Interval problems</li>
        <li class="">Solving Patterns problems on a stack</li>
        <li class="head">Problem solving using queue</li>
        <li class="">Problems on Queue Operation</li>
        <li class="">Solving problems Priority Queue  </li>
        <li class="head">Linked List</li>
        <li class="">Linear Scan Approach </li>
        <li class="">Working with partition technique  </li>
        <li class="">Working with merge technique </li>
        <li class="">List Reversing problem</li>
        <li class="">Fast and slow pointer approach  </li>
        <li class="">Math operations on List </li>
        <li class="">Recursion with a static variable  </li>
        <li class="">Flatten list </li>
        <li class="">Tricky Cloning List</li>
        <li class="head">Problem solving using trees</li>
        <li class="">Finding properties effectively  </li>
        <li class="">Counting trees</li>
        <li class="">Build a tree from raw inputs</li>
        <li class="">Clone trees</li>
        <li class="">Tree Conversion without side-effects</li>
        <li class="">Traversal of Tree</li>
        <li class="">Finding Path problems</li>
        <li class="">Problems on BST</li>
        <li class="">Problems on Heap Tree</li>
        <li class="">Subtree problem</li>
        <li class="">LCA tree problem</li>
        <li class="">Random Nodes in trees</li>
        <li class="">Distance problem</li>
        <li class="">Tries</li>
        <li class="head">Problem solving using graph</li>
        <li class="">Utilization of BFS</li>
        <li class="">Utilization of DFS</li>
        <li class="">Problems on Minimum spalling tree </li>
        <li class="">Shortest Path </li>
        <li class="">Course schedule</li>
        <li class="">Flights scheduling </li>
        <li class="head">Puzzles on Searching</li>
        <li class="">Masterwork search problems</li>
        <li class="">Binary search simulation</li>
        <li class="">Online binary search</li>
        <li class="">Application of Binary search  </li>
        <li class="head">Puzzles on Shorting</li>
        <li class="">More on Swapping technique</li>
        <li class="">More on Merge Technique </li>
        <li class="">More on Partition technique </li>
        <li class="">Working with Hashing</li>
        <li class="">Recursion and backtracking </li>
        <li class="">Permutation and Combination</li>
        <li class="">Working with Powersets</li>
        <li class="">Classic Backtracking</li>
        <li class="">Greedy Algorithms</li>
        <li class="">Classic greedy problem</li>
        <li class="">Greedy scheduling problems</li>
        <li class="">Greedy approximation problem </li>
        <li class="">Greedy scheduling problems</li>
        <li class="">More trickery greedy problem.</li>
        <li class="head">Dynamic programming</li>
        <li class="">Understanding DP with examples</li>
        <li class="">Single State greedy problem</li>
        <li class="">Multi-state greedy problem</li>
        <li class="">Buy-sell stock problems</li>
        <li class="">Length based approach  </li>
        <li class="">Palindrome problems  </li>
        <li class="">Longest common subsequence </li>
        <li class="">Longest increasing subsequence</li>
        <li class="">Combination sum</li>
        <li class="">Coin Change problems</li>
        <li class="">Knapsack problems </li>
        <li class="">Sum of Subset problems</li>
        <li class="">Graph Transitivity problem </li>
        <li class="">Multi-state graph problem</li>
        <li class="">TSP and bit masking problem</li>
        <li class="head">Design Problems</li>
        <li class="">Design APIs</li>
        <li class="">LRU/MRU </li>
        <li class="">Game component design </li>
        <li class="">Iterator Design on complex DS</li>
        <li class="">Augmented DS </li>
        <li class="">Scalable Design -I </li>
        <li class="">Scalable Design II </li>
    </ul>
    </div>
</div>

<!-- FAQ-->
<div class="container">
    <a name="faq"></a>
    <div class="gridBlock textCenter gap_xxl">
        <div class="oneByOne">
                <p class="sectionSubHeading noMargin">FAQs</p>
                <p class="sectionHeading noMargin">Do you have any question?</p>
        </div>
    </div>
    <div class="gridBlock gap_xl">
        <ul class="oneColumn">
            <li>
                <p class="itemHeading ">What is the price for this course?</p>
                <p class="paragraph ">This is a NOT a free service. The frees for this course is 25,000 INR. You need to pay 5,000 INR on registration and you need to pay rest 20,000 INR before the first class. This cost was determine based on the value you will get it from.</p>
            </li>
            <li>
                <p class="itemHeading ">Why this course is only for indian students/engineers?</p>
                <p class="paragraph ">We see there is high demand of this course from india. But most of them can't effort original rate (e.g 110 dolors/hrs ~ 10,000 INR/ours) rate for this. We are trying this out by setting the minimum amount so that people can effort. </p>
            </li>
            <li>
                <p class="itemHeading ">I am working at service based org like TCS, WIPRO. Can I attend this training?</p>
                <p class="paragraph ">Yes, this course has also designed for the people who is working at IT. Talented engineers are not happy with service based org and want to move to product based org, but they don;t know where to start - We are here to help them out. </p>
            </li>
            <li>
                <p class="itemHeading ">I am already working or product based org and decent CS knowledge ?</p>
                <p class="paragraph"> That would be great! We have multiple batches for this program. Based on your competence and need, we will put you in right batch.</p>
            </li>
            <li>
                <p class="itemHeading ">What is the size of each batch ?</p>
                <p class="paragraph ">We have at most 10 people in a batch. we run multiple batches based on the competence and need, please talk to the contact person of any help.</p>
            </li>
            <li>
                <p class="itemHeading ">What will it change after completing this course?</p>
                <p class="paragraph "> These sessions are targeted for people who want to master the problem-solving skill. The sessions are expected to be mostly technical and heavy on coding skill. This leaves you with a sense of having learned something useful in your daily life as a software engineer. </p>
            </li>
            <li>
                <p class="itemHeading ">What are the goals of these programs?</p>
                <p class="paragraph ">The main aim to shift your mind and put it into software engineer interview mode and make you confident of cracking difficult software engineering interviews. </p>
            </li>
            <li>
                <p class="itemHeading ">What the programs are NOT?</p>
                <p class="paragraph ">This course is not a substitute for an “algorithms class” or  “data structure class”. They are not a list of "interview questions” which is to be solved.</p>
            </li>
            <li>
                <p class="itemHeading ">What language does the course use?</p>
                <p class="paragraph ">The problem-solving technique is language agnostic, so you can use any language you want code then .In general, we provide solutions in Pseudocode and C++/Java.</p>
            </li>
            <li>
                <p class="itemHeading ">What are the prerequisites?</p>
                <p class="paragraph ">Nothing, You should be eager to learn. The fundamental knowledge of data structure and basic coding skill can help you. If you are not from CS background, please let us know. </p>
            </li>
            <li>
                <p class="itemHeading ">How is the each session structured?</p>
                <p class="paragraph ">Please see the above table for details.</p>
            </li>
            <li>
                <p class="itemHeading ">Can I get refund if I are not happy?</p>
                <p class="paragraph">If you wish to un-enroll, email us within 7 days for a full refund. No questions asked. </p>
            </li>
            <li>
                <p class="itemHeading ">I still have some other question. Can you help?</p>
                <p class="paragraph">Please have a look to our main <a>FAQ</a> You can always send feedback or ask question in our <a>facebook group.</a></p>
            </li>
        </ul>
    </div>
</div>
{% endblock %}
